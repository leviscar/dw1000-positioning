#ifndef _RF24L01_H
#define _RF24L01_H
#include "stdint.h"
#include "stm32f0xx_hal.h"
#include "delay.h"


/**********  NRF24L01寄存器操作命令  ***********/
#define NRF_READ_REG        0x00  //读配置寄存器,低5位为寄存器地址
#define NRF_WRITE_REG       0x20  //写配置寄存器,低5位为寄存器地址
#define RD_RX_PLOAD     0x61  //读RX有效数据,1~32字节
#define WR_TX_PLOAD     0xA0  //写TX有效数据,1~32字节
#define FLUSH_TX        0xE1  //清除TX FIFO寄存器.发射模式下用
#define FLUSH_RX        0xE2  //清除RX FIFO寄存器.接收模式下用
#define REUSE_TX_PL     0xE3  //重新使用上一包数据,CE为高,数据包被不断发送.
#define NOP             0xFF  //空操作,可以用来读状态寄存器	 
/**********  NRF24L01寄存器地址   *************/
#define CONFIG          0x00  //配置寄存器地址                             
#define EN_AA           0x01  //使能自动应答功能 
#define EN_RXADDR       0x02  //接收地址允许
#define SETUP_AW        0x03  //设置地址宽度(所有数据通道)
#define SETUP_RETR      0x04  //建立自动重发
#define RF_CH           0x05  //RF通道
#define RF_SETUP        0x06  //RF寄存器
#define STATUS          0x07  //状态寄存器
#define OBSERVE_TX      0x08  // 发送检测寄存器
#define CD              0x09  // 载波检测寄存器
#define RX_ADDR_P0      0x0A  // 数据通道0接收地址
#define RX_ADDR_P1      0x0B  // 数据通道1接收地址
#define RX_ADDR_P2      0x0C  // 数据通道2接收地址
#define RX_ADDR_P3      0x0D  // 数据通道3接收地址
#define RX_ADDR_P4      0x0E  // 数据通道4接收地址
#define RX_ADDR_P5      0x0F  // 数据通道5接收地址
#define TX_ADDR         0x10  // 发送地址寄存器
#define RX_PW_P0        0x11  // 接收数据通道0有效数据宽度(1~32字节) 
#define RX_PW_P1        0x12  // 接收数据通道1有效数据宽度(1~32字节) 
#define RX_PW_P2        0x13  // 接收数据通道2有效数据宽度(1~32字节) 
#define RX_PW_P3        0x14  // 接收数据通道3有效数据宽度(1~32字节) 
#define RX_PW_P4        0x15  // 接收数据通道4有效数据宽度(1~32字节)
#define RX_PW_P5        0x16  // 接收数据通道5有效数据宽度(1~32字节)
#define FIFO_STATUS     0x17  // FIFO状态寄存器
/*――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――*/

#define RF_CS_PIN        SPI1_NSS_Pin
#define RF_CS_PORT       SPI1_NSS_GPIO_Port


#define RF_CE_PIN        NRF_CE_Pin
#define RF_CE_PORT       NRF_CE_GPIO_Port


#define RF_IQR_PIN        NRF_INT_Pin
#define RF_IQR_PORT       NRF_INT_GPIO_Port
//    PA5     ------> SPI1_SCK
//    PA6     ------> SPI1_MISO
//    PA7     ------> SPI1_MOSI 
#define RF_SCK_PIN        GPIO_Pin_5
#define RF_SCK_PORT       GPIOA


#define RF_MISO_PIN       GPIO_Pin_6
#define RF_MISO_PORT      GPIOA


#define RF_MOSI_PIN       GPIO_Pin_7
#define RF_MOSI_PORT      GPIOA



#define RF_SPI1               hspi1.Instance
#define SPI_RF_CS_LOW()		 HAL_GPIO_WritePin(SPI1_NSS_GPIO_Port,SPI1_NSS_Pin,GPIO_PIN_RESET)
#define SPI_RF_CS_HIGH()   HAL_GPIO_WritePin(SPI1_NSS_GPIO_Port,SPI1_NSS_Pin,GPIO_PIN_SET)

#define SPI_RF_CE_LOW()    HAL_GPIO_WritePin(NRF_CE_GPIO_Port,NRF_CE_Pin,GPIO_PIN_RESET)
#define SPI_RF_CE_HIGH()   HAL_GPIO_WritePin(NRF_CE_GPIO_Port,NRF_CE_Pin,GPIO_PIN_SET)


#define RF_READINTPIN()		 HAL_GPIO_ReadPin( NRF_INT_GPIO_Port, NRF_INT_Pin) //中断引脚

/******   STATUS寄存器bit位定义      *******/
#define MAX_TX  	0x10  //达到最大发送次数中断
#define TX_OK   	0x20  //TX发送完成中断
#define RX_OK   	0x40  //接收到数据中断
/*――――――――――――――――――――――――――――――――――――――――――――――――――*/

/*********     24L01发送接收数据宽度定义	  ***********/
#define TX_ADR_WIDTH    5   //5字节地址宽度
#define RX_ADR_WIDTH    5   //5字节地址宽度
#define TX_PLOAD_WIDTH  32  //32字节有效数据宽度
#define RX_PLOAD_WIDTH  32  //32字节有效数据宽度
/*―――――――――――――――――――――――――――――――――――――――――――――――――――――――*/
extern SPI_HandleTypeDef hspi1;
extern SPI_HandleTypeDef hspi2;
extern uint8_t nrfsta;
extern uint8_t TransCop;

extern uint8_t nrf_Tx_Buffer[33] ; // 无线传输发送数据
extern uint8_t nrf_Rx_Buffer[33] ; // 无线传输接收数据

extern uint8_t NRF24L01_Write_Reg(uint8_t reg,uint8_t value);
extern uint8_t NRF24L01_Read_Reg(uint8_t reg);
extern uint8_t NRF24L01_Write_Buf(uint8_t reg, uint8_t *pBuf, uint8_t len);
extern uint8_t NRF24L01_Read_Buf(uint8_t reg,uint8_t *pBuf,uint8_t len);
extern uint8_t NRF24L01_Check(void);
extern void  NRF24L01_RX_Mode(void);
extern void  NRF24L01_TX_Mode(void);
extern uint8_t NRF24L01_RxPacket(uint8_t *rxbuf);
extern uint8_t NRF24L01_TxPacket(uint8_t *txbuf);
extern uint8_t SPI_RF_SendByte(uint8_t temp);

#endif

